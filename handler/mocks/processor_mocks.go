// Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: event/processor.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Processor interface
type MockProcessor struct {
	ctrl     *gomock.Controller
	recorder *_MockProcessorRecorder
}

// Recorder for MockProcessor (not exported)
type _MockProcessorRecorder struct {
	mock *MockProcessor
}

func NewMockProcessor(ctrl *gomock.Controller) *MockProcessor {
	mock := &MockProcessor{ctrl: ctrl}
	mock.recorder = &_MockProcessorRecorder{mock}
	return mock
}

func (_m *MockProcessor) EXPECT() *_MockProcessorRecorder {
	return _m.recorder
}

func (_m *MockProcessor) ProcessEvent(event string) error {
	ret := _m.ctrl.Call(_m, "ProcessEvent", event)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockProcessorRecorder) ProcessEvent(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ProcessEvent", arg0)
}
